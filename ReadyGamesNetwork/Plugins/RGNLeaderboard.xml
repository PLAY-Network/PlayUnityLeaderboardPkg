<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RGNLeaderboard</name>
    </assembly>
    <members>
        <member name="T:RGN.Modules.Leaderboard.LeaderboardModule">
            <summary>
            This module is responsible for player scores and ranks them according to their totals.
            </summary>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.SetRGNCore(RGN.IRGNRolesCore)">
            <summary>
            Sets the Ready Games Network (RGN) core reference.
            </summary>
            <param name="rgnCore">The RGN core to be set.</param>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Init">
            <summary>
            Initializes the LeaderboardModule.
            This method is currently empty and can be filled with initial setup logic if needed in the future.
            </summary>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Dispose">
            <summary>
            Releases all resources used by the StoreModule.
            This method is currently empty and can be filled with cleanup logic if needed in the future.
            </summary>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetLeaderboardAsync(System.String)">
            <summary>
            Asynchronous method that retrieves leaderboard data.
            Resulting Data contains leaderboard description fields like id, name, type, etc.
            </summary>
            <param name="leaderboardId"></param>
            <returns></returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetLeaderboardIdsAsync">
            <summary>
            Method to retrieve leaderboard ids defined for current project
            </summary>
            <returns></returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.SetScoreAsync(System.String,System.Int32,System.String)">
            <summary>
            Asynchronously sets the player's score on the specified leaderboard.
            </summary>
            <param name="leaderboardId">The ID of the leaderboard where the score will be set.</param>
            <param name="score">The score to be set on the leaderboard.</param>
            <param name="extraData">(Optional) Extra data associated with the score. Defaults to an empty string if not provided.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the player's rank after setting the score.</returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetUserEntryAsync(System.String)">
            <summary>
            Asynchronously retrieves the player's entry on the specified leaderboard.
            </summary>
            <param name="leaderboardId">The ID of the leaderboard from which the entry will be retrieved.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the player's entry data on the leaderboard.</returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetEntriesAsync(System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Asynchronously retrieves a specified number of top entries and entries around the user from the specified leaderboard.
            </summary>
            <param name="leaderboardId">The ID of the leaderboard from which the entries will be retrieved.</param>
            <param name="quantityTop">The number of top entries to retrieve from the leaderboard.</param>
            <param name="includeUser">Whether to include the user's entry in the retrieved entries.</param>
            <param name="quantityAroundUser">The number of entries to retrieve around the user's entry.</param>
            <returns>A task that represents the asynchronous operation. The task result contains a list of the retrieved leaderboard entries.</returns>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.id">
            <summary>
            Unique id of the leaderboard
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.name">
            <summary>
            Leaderboard name
            Is used also to store localization key for the name
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.description">
            <summary>
            Leaderboard description
            Is used also to store localization key for the description
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.invertSortOrder">
            <summary>
            Sorting direction:
            false - places are sorted in descending order;
            true - places are sorted in ascending order.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.decimalOffset">
            <summary>
            The size of the decimal part
            e.g., with decimalOffset: 2, the number 1234 will be displayed as 12.34.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.type">
            <summary>
            Specifies what is leaderboard type
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.autoResettable">
            <summary>
            Should the leaderboard automatically reset
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.resetEveryTimeAtCron">
            <summary>
            Cron expression to specify reset period 
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.rewardsAtReset">
            <summary>
            Rewards which will be earned at reset period
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.createdAt">
            <summary>
            Date and time when the leaderboard was created
            This field is automatically populated by the backend
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.updatedAt">
            <summary>
            Date and time when the leaderboard was last time updated
            This field is automatically populated by the backend
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.createdBy">
            <summary>
            User Id who created the leaderboard
            This field is automatically populated by the backend
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.updatedBy">
            <summary>
            User Id who last time updated the leaderboard
            This field is automatically populated by the backend
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardReward.placeFrom">
            <summary>
            The place from users will be earned
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardReward.placeTo">
            <summary>
            The place to users will be earned
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardReward.achievementId">
            <summary>
            Specifies reward, achievement contains virtual items reward, currency reward, etc
            </summary>
        </member>
    </members>
</doc>
