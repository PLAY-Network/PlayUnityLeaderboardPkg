<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RGNLeaderboard</name>
    </assembly>
    <members>
        <member name="T:RGN.Modules.Leaderboard.LeaderboardModule">
            <summary>
            This module is responsible for player scores and ranks players according to their totals.
            </summary>
        </member>
        <member name="T:RGN.Modules.Leaderboard.LeaderboardModule.Admin">
            <summary>
            Handles critical operations for Leaderboard data
            </summary>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Admin.SetRGNCore(RGN.IRGNRolesCore)">
            <summary>
            Sets the Ready Games Network (RGN) core reference.
            </summary>
            <param name="rgnCore">The RGN core to be set.</param>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Admin.Init">
            <summary>
            Initializes the LeaderboardModule.Admin.
            This method is currently empty and can be filled with initial setup logic if needed in the future.
            </summary>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Admin.Dispose">
            <summary>
            Releases all resources used by the LeaderboardModule.Admin.
            This method is currently empty and can be filled with cleanup logic if needed in the future.
            </summary>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Admin.AddLeaderboardAsync(RGN.Modules.Leaderboard.LeaderboardData)">
            <summary>
            Asynchronously creates a new leaderboard
            Resulting string contains leaderboard id of the new created leaderboard
            </summary>
            <param name="leaderboardData">Leaderboard data to set up</param>
            <returns>Leaderboard Id</returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Admin.UpdateLeaderboardAsync(RGN.Modules.Leaderboard.LeaderboardData)">
            <summary>
            Asynchronously updates existing leaderboard
            Resulting string contains leaderboard id of the updated leaderboard
            </summary>
            <param name="leaderboardData">Leaderboard data with the new settings</param>
            <returns>Leaderboard Id</returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Admin.DeleteLeaderboardAsync(System.String)">
            <summary>
            Asynchronously deletes existing leaderboard
            </summary>
            <param name="leaderboardId">Leaderboard id to remove</param>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.SetRGNCore(RGN.IRGNRolesCore)">
            <summary>
            Sets the Ready Games Network (RGN) core reference.
            </summary>
            <param name="rgnCore">The RGN core to be set.</param>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Init">
            <summary>
            Initializes the LeaderboardModule.
            This method is currently empty and can be filled with initial setup logic if needed in the future.
            </summary>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.Dispose">
            <summary>
            Releases all resources used by the LeaderboardModule.
            This method is currently empty and can be filled with cleanup logic if needed in the future.
            </summary>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetLeaderboardByIdAsync(System.String)">
            <summary>
            Asynchronous method that retrieves leaderboard data.
            Resulting Data contains leaderboard description fields like id, name, type, etc.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetLeaderboardByRequestNameAsync(System.String)">
            <summary>
            Asynchronous method that retrieves leaderboard data.
            Resulting Data contains leaderboard description fields like id, name, type, etc.
            </summary>
            <param name="requestName"></param>
            <returns></returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetLeaderboardByRequestNamesAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Asynchronous method that retrieves leaderboards data.
            Resulting Data contains leaderboard description fields like id, name, type, etc.
            </summary>
            <param name="requestNames"></param>
            <returns></returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetLeaderboardIdsAsync">
            <summary>
            Method to retrieve leaderboard ids defined for current project
            </summary>
            <returns></returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.SetScoreAsync(System.String,System.Int32,System.String)">
            <summary>
            Asynchronously sets the player's score on the specified leaderboard.
            </summary>
            <param name="leaderboardId">The ID of the leaderboard where the score will be set.</param>
            <param name="score">The score to be set on the leaderboard.</param>
            <param name="extraData">(Optional) Extra data associated with the score. Defaults to an empty string if not provided.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the player's place after setting the score.</returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.AddScoreAsync(System.String,System.Int32,System.String)">
            <summary>
            Asynchronously adds the player's score on the specified leaderboard.
            </summary>
            <param name="leaderboardId">The ID of the leaderboard where the score will be added.</param>
            <param name="score">The score to be added on the leaderboard.</param>
            <param name="extraData">(Optional) Extra data associated with the score. Defaults to an empty string if not provided.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the player's place after setting the score.</returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetUserEntryAsync(System.String)">
            <summary>
            Asynchronously retrieves the player's entry on the specified leaderboard.
            </summary>
            <param name="leaderboardId">The ID of the leaderboard from which the entry will be retrieved.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the player's entry data on the leaderboard.</returns>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardModule.GetEntriesAsync(System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Asynchronously retrieves a specified number of top entries and entries around the user from the specified leaderboard.
            </summary>
            <param name="leaderboardId">The ID of the leaderboard from which the entries will be retrieved.</param>
            <param name="quantityTop">The number of top entries to retrieve from the leaderboard.</param>
            <param name="includeUser">Whether to include the user's entry in the retrieved entries.</param>
            <param name="quantityAroundUser">The number of entries to retrieve around the user's entry.</param>
            <returns>A task that represents the asynchronous operation. The task result contains a list of the retrieved leaderboard entries.</returns>
        </member>
        <member name="T:RGN.Modules.Leaderboard.LeaderboardData">
            <summary>
            A class that represents a leaderboard on Ready Games Network.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.id">
            <summary>
            Unique id of the leaderboard
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.requestName">
            <summary>
            Leaderboard request name. This value can be used to query leaderboards
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.name">
            <summary>
            Leaderboard name
            Is used also to store localization key for the name
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.description">
            <summary>
            Leaderboard description
            Is used also to store localization key for the description
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.setBy">
            <summary>
            Define who can set/add score to the leaderboard
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.invertSortOrder">
            <summary>
            Sorting direction:
            false - places are sorted in descending order;
            true - places are sorted in ascending order.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.decimalOffset">
            <summary>
            This parameter determines how many digits of the score integer are displayed
            after the decimal point.
            The size of the decimal part
            e.g., with decimalOffset: 2, the number 1234 will be displayed as 12.34.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.type">
            <summary>
            The leaderboard type that determines the results unit.Possible values:
            numeric — Number.
            time — Time in milliseconds.
            Default value is numeric
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.resetEveryTimeAtCron">
            <summary>
            If it is provided, then it specifies reset period for the leaderboard
            How often the leaderboard will reset specified by the cron string.
            *    *    *    *    *    *
            ┬    ┬    ┬    ┬    ┬    ┬
            │    │    │    │    │    |
            │    │    │    │    │    └ day of week(0 - 7, 1L - 7L) (0 or 7 is Sun)
            │    │    │    │    └───── month(1 - 12)
            │    │    │    └────────── day of month(1 - 31, L)
            │    │    └─────────────── hour(0 - 23)
            │    └──────────────────── minute(0 - 59)
            └───────────────────────── second(0 - 59, optional)
            You can use the https://crontab.guru/ to create cron settings
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.rewardsAtReset">
            <summary>
            Rewards which will be earned at reset period
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.createdAt">
            <summary>
            Date and time when the leaderboard was created
            in milliseconds since midnight, January 1, 1970 UTC.
            Refer to <see cref="T:RGN.Utility.DateTimeUtility"/> for helper methods.
            This field is automatically populated by the backend
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.updatedAt">
            <summary>
            Date and time when the leaderboard was last time updated
            in milliseconds since midnight, January 1, 1970 UTC.
            Refer to <see cref="T:RGN.Utility.DateTimeUtility"/> for helper methods.
            This field is automatically populated by the backend
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.createdBy">
            <summary>
            User Id who created the leaderboard
            This field is automatically populated by the backend
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardData.updatedBy">
            <summary>
            User Id who last time updated the leaderboard
            This field is automatically populated by the backend
            </summary>
        </member>
        <member name="T:RGN.Modules.Leaderboard.LeaderboardEntry">
            <summary>
            A class that represents an entry in the leaderboard.
            This class serves as a Data Transfer Object (DTO) that contains details about a user's entry in the leaderboard.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardEntry.userId">
            <summary>
            Gets the unique identifier of the user.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardEntry.score">
            <summary>
            Gets the score of the user.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardEntry.formattedScore">
            <summary>
            Gets the score of the user formatted as a string.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardEntry.place">
            <summary>
            Gets or sets the rank or place of the user on the leaderboard.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardEntry.extraData">
            <summary>
            Gets or sets the extra data associated with the user's score entry.
            </summary>
        </member>
        <member name="M:RGN.Modules.Leaderboard.LeaderboardEntry.ToString">
            <summary>
            Creates a string representation of the LeaderboardEntry.
            </summary>
            <returns>A string that represents the current LeaderboardEntry.</returns>
        </member>
        <member name="T:RGN.Modules.Leaderboard.LeaderboardReward">
            <summary>
            A class that represents a leaderboard reward on Ready Games Network.
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardReward.placeFrom">
            <summary>
            The place from users will be earned
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardReward.placeTo">
            <summary>
            The place to users will be earned
            </summary>
        </member>
        <member name="F:RGN.Modules.Leaderboard.LeaderboardReward.achievementId">
            <summary>
            Specifies reward, achievement contains virtual items reward, currency reward, etc
            </summary>
        </member>
    </members>
</doc>
